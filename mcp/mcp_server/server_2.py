

import os
from mcp.server.fastmcp import FastMCP

# –°–æ–∑–¥–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä
mcp = FastMCP("FileTools")

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤ (–≤–º–µ—Å—Ç–æ CFG.BASE_DIR)
BASE_DIR = os.path.join(os.path.dirname(__file__), "files")

# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(BASE_DIR, exist_ok=True)



@mcp.tool()
def create_folder(folder_name: str) -> str:
    """–°–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –≤ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    folder_path = os.path.join(BASE_DIR, folder_name)
    try:
        os.makedirs(folder_path, exist_ok=True)
        return f"–ü–∞–ø–∫–∞ '{folder_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ {folder_path}"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}"

@mcp.tool()
def create_text_file(file_name: str, content: str) -> str:
    """–°–æ–∑–¥–∞—ë—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≤ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    file_path = os.path.join(BASE_DIR, file_name)
    try:
        with open(file_path, 'w', encoding='utf-8') as file:
            file.write(content)
        return f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ {file_path}"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}"

@mcp.tool()
def read_text_file(file_name: str) -> str:
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞."""
    file_path = os.path.join(BASE_DIR, file_name)
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            content = file.read()
        return f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ '{file_name}':\n{content}"
    except FileNotFoundError:
        return f"–§–∞–π–ª '{file_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}"

@mcp.tool()
def list_files() -> str:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –≤ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    try:
        items = os.listdir(BASE_DIR)
        if not items:
            return "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞"
        
        files = []
        folders = []
        for item in items:
            item_path = os.path.join(BASE_DIR, item)
            if os.path.isfile(item_path):
                files.append(f"üìÑ {item}")
            else:
                folders.append(f"üìÅ {item}")
        
        result = f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {BASE_DIR}:\n"
        if folders:
            result += "–ü–∞–ø–∫–∏:\n" + "\n".join(folders) + "\n"
        if files:
            result += "–§–∞–π–ª—ã:\n" + "\n".join(files)
        
        return result
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {e}"

@mcp.tool()
def delete_file(file_name: str) -> str:
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –∏–∑ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    file_path = os.path.join(BASE_DIR, file_name)
    try:
        if os.path.exists(file_path):
            if os.path.isfile(file_path):
                os.remove(file_path)
                return f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
            else:
                return f"'{file_name}' —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π, –Ω–µ —Ñ–∞–π–ª–æ–º"
        else:
            return f"–§–∞–π–ª '{file_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}"

if __name__ == "__main__":
    print(f"–ó–∞–ø—É—Å–∫ —Ñ–∞–π–ª–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {BASE_DIR}")
    mcp.run(transport="stdio")

